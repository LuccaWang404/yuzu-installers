on:
  schedule:
    # check update per 5 minutes (test only)
    - cron: '*/5 * * * *'
    # check update per 12 hours
    # - cron: '0 */12 * * *'

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Get version information
        id: version_info
        # Get latest version information through GitHub API
        run: |
          LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/yuzu-emu/yuzu-mainline/releases/latest" | jq -r .tag_name)
          echo "build_version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Create tag
        uses: actions/github-script@v6
        # Use GitHub Scripts to create a new tag. If there are no newer versions available, this step will fail.
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.version_info.outputs.build_version }}',
              sha: context.sha
            })

  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check update & Write version information
        # Powershell PS1 Scripts to compare version information. Newer version information will be recorded in yuzu_latest_tag.txt.
        # If there are no newer versions available, this step will fail with exit code 1.
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/yuzu-emu/yuzu-mainline/releases/latest"
          $tag_name = $response.tag_name
          $previous_tag_name = cat yuzu_latest_tag.txt
          if ($tag_name -eq $previous_tag_name) {
            echo No newer version has been found.
            exit 1
          }         
          else {
            echo $tag_name > yuzu_latest_tag.txt
          }
        shell: powershell
      
      - name: Commit version information
        # Commit new version information text file to the repository
        run: |
          git config --global user.name 'LuccaWang404'
          git config --global user.email 'jh327063592@163.com'
          git add yuzu_latest_tag.txt
          git commit -m "Version Update"
        shell: powershell
      
      - name: Push changes
      # Push new version information text file to the repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      
      - name: Save version information to $env
      # Set $env variables
        id: version_info
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/yuzu-emu/yuzu-mainline/releases/latest"
          $tag_name = $response.tag_name
          echo "build_version=$tag_name" >> $env:GITHUB_OUTPUT
          $7zFile = $release.assets | Where-Object { $_.name -like "*.7z" }
          $browser_download_url = $7zFile[0].browser_download_url
          echo "download_url=$browser_download_url" >> $env:GITHUB_OUTPUT
        shell: powershell
      
      - name: Download & extract latest release
      # Download and extract latest release (.7z version)
        run: |
          wget -o yuzu-windows-msvc-latest.7z ${{ steps.version_info.outputs.download_url }}
          7z x yuzu-windows-msvc-latest.7z
        shell: powershell

      - name: Compile .ISS to .EXE Installer
      # Inno Setup compilation
        uses: Minionguyjpro/Inno-Setup-Action@v1.1.0
        with:
          path: yuzu-mainline-0-installer.iss
          options: /O+

      - name: Pushing new release
      # Publish installer
        uses: ncipollo/release-action@v1.10.0
        with:
          name: ${{ steps.version_info.outputs.build_version }}
          artifacts: "build/*.exe"
          tag: ${{ steps.version_info.outputs.build_version }}
          body: "## 🔔🍊 柚子模拟器安装程序发行版( v${{ steps.version_info.outputs.build_version }} )更新🔔
          
                  此发行包含⚡️最新的⚡️( v ${{ steps.version_info.outputs.build_version }} )柚子模拟器安装程序和安装程序以[Inno Setup](https://jrsoftware.org/isinfo.php)脚本编写的源代码压缩存档。</br>
                  此项目为一个非官方的[柚子模拟器](https://github.com/yuzu-emu/yuzu)安装程序构建版本。</br>
                  如果您需要了解更多细节，请前往官方仓库的发布页面以查看最新的[Changelog](https://github.com/yuzu-emu/yuzu-mainline/releases/latest)。</br>
                  **❗️由于本安装程序仍处于测试阶段，所有功能均不稳定并可能导致数据丢失，请谨慎使用❗️**</br>
                  
                  > TIP：此项目通过GitHub Actions定时检查更新、即时构建，与官方渠道的发行进度基本同步。</br>"
          omitBodyDuringUpdate: true
          allowUpdates: true
          replacesArtifacts: true
          owner: "LuccaWang404"
          repo: "yuzu-installers"
          token: ${{ secrets.GITHUB_TOKEN }}
      
